version: '3.8'

services:
  db:
    image: postgres:16-alpine
    expose:
      - ${POSTGRES_PORT}
    volumes:
      - database:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      retries: 5

  redis:
    image: redis:7.4.1-alpine
    expose:
      - ${REDIS_PORT}
    volumes:
      - redis_data:/var/lib/redis/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      retries: 5

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery
    command: celery -A twitter_clone worker --loglevel=info
    depends_on:
      - redis
      - backend
    volumes:
      - .:/app
    env_file:
      - .env

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      maildev:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env

  maildev:
    image: maildev/maildev:2.1.0
    ports:
      - "1080:1080"
      - "1025:1025"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://0.0.0.0:1080/" ]
      interval: 10s
      retries: 3

volumes:
  database:
  redis_data: